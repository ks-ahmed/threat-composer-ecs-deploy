name: Terraform Initialize & Plan


on:
  workflow_call:
    inputs:
      image_uri:
        required: true
        type: string


jobs:
  terraform-plan:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3


      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init


      - name: Run TFLint
        working-directory: ./terraform
        run: tflint --recursive


      - name: Run Checkov (Terraform security scan)
        uses: bridgecrewio/checkov-action@v12.2455.0
        with:
          directory: ./terraform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -input=false


      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform plan \
            -lock=false \
            -var="backend_bucket_name=vettlyai-tf-state-prod" \
            -var="backend_dynamodb_table_name=terraform-locks" \
            -var="container_image=${{ inputs.image_uri }}" \
            -var="domain=tm.vettlyai.com" \
            -var="cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}" \
            -var="cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -out=tfplan

  
  call-terraform-apply:
    needs: terraform-plan
    uses: ./.github/workflows/terraform-apply.yaml
    with:
      image_uri: ${{ inputs.image_uri }}
