name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
    ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
    IMAGE_TAG: ${{ guthub.sha }}
    AWS_REGION: ${{ vars.AWS_REGION }}
    

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    outputs:
      image_uri: ${{ steps.show-image.outputs.image_uri }}
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./app


      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Tag and Push Docker image
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set image URI output
        id: show-image
        run: echo "image_uri=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: Show IMAGE_TAG
        run: echo "Image tag is $IMAGE_TAG"



  
  call-terraform-init-plan:
    needs: build-and-push
    uses: ./.github/workflows/terraform-init-plan.yaml
    with:
      image_uri: ${{ needs.build-and-push.outputs.image_uri }}
    secrets: inherit

  call-terraform-apply:
    needs: call-terraform-init-plan
    uses: ./.github/workflows/terraform-apply.yaml
    with:
      image_uri: ${{ needs.build-and-push.outputs.image_uri }}   
    secrets: inherit


