name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      deploy: 
        description: "Build & Push Dockerfile"
        required: true
        default: "start"


env:
  AWS_REGION: eu-west-2
  ECR_REPOSITORY: tm-app
  IMAGE_TAG: final



jobs:
  build-and-push:
    runs-on: ubuntu-latest


    outputs:
      image_uri: ${{ steps.show-image.outputs.image_uri }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Build, tag, and push image to ECR
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG ./app
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG



      - name: Show Image URL
        id: show-image
        run: |
          echo "image_uri=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT



  call-terraform-plan:
    needs: build-and-push
    uses: ./.github/workflows/terraform-init-plan.yaml
    with:
      image_uri: ${{ needs.build-and-push.outputs.image_uri }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

